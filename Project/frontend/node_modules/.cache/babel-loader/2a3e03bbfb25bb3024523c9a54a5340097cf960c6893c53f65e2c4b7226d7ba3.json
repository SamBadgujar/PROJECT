{"ast":null,"code":"// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { DeleteEmployeeById } from \"../api\";\n// import { notify } from \"../utils\";\n\n// function EmployeeTable({\n//   employees = [], // Default value to handle undefined employees\n//   pagination = { currentPage: 1, totalPages: 1 },\n//   fetchEmployees,\n//   handleUpdateEmployee,\n// }) {\n//   const headers = [\"Name\", \"Email\", \"Phone\", \"Department\", \"Actions\"];\n//   const { currentPage, totalPages } = pagination;\n\n//   const handleNextPage = () => {\n//     if (currentPage < totalPages) {\n//       handlePagination(currentPage + 1);\n//     }\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (currentPage > 1) {\n//       handlePagination(currentPage - 1);\n//     }\n//   };\n\n//   const handlePagination = (page) => {\n//     fetchEmployees(\"\", page, 5);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       const { success, message } = await DeleteEmployeeById(id);\n//       if (success) {\n//         notify(message, \"success\");\n//         fetchEmployees();\n//       } else {\n//         notify(message, \"error\");\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       notify(\"Failed to delete Employee\", \"error\");\n//     }\n//   };\n\n//   const TableRow = ({ employee }) => (\n//     <tr>\n//       <td>\n//         <Link to={`/employee/${employee._id}`} className=\"text-decoration-none\">\n//           {employee.name}\n//         </Link>\n//       </td>\n//       <td>{employee.email}</td>\n//       <td>{employee.phone}</td>\n//       <td>{employee.department}</td>\n//       <td>\n//         <i\n//           className=\"bi bi-pencil-fill text-warning me-4\"\n//           role=\"button\"\n//           data-bs-toggle=\"tooltip\"\n//           data-bs-placement=\"top\"\n//           title=\"Edit\"\n//           onClick={() => handleUpdateEmployee(employee)}\n//         ></i>\n//         <i\n//           className=\"bi bi-trash-fill text-danger\"\n//           role=\"button\"\n//           data-bs-toggle=\"tooltip\"\n//           data-bs-placement=\"top\"\n//           title=\"Delete\"\n//           onClick={() => handleDeleteEmployee(employee._id)}\n//         ></i>\n//       </td>\n//     </tr>\n//   );\n\n//   const pageNumbers = Array.from(\n//     { length: totalPages },\n//     (_, index) => index + 1\n//   );\n\n//   return (\n//     <>\n//       <h1>Samadhan</h1>\n//       <table className=\"table table-striped\">\n//         <thead>\n//           <tr>\n//             {headers.map((header, i) => (\n//               <th key={i}>{header}</th>\n//             ))}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {employees && employees.length === 0 ? (\n//             <tr>\n//               <td colSpan={headers.length}>Data Not Found</td>\n//             </tr>\n//           ) : (\n//             employees.map((emp) => <TableRow employee={emp} key={emp._id} />)\n//           )}\n//         </tbody>\n//       </table>\n\n//       <div className=\"d-flex justify-content-between align-items-center my-3\">\n//         <span className=\"badge bg-primary\">\n//           Page {currentPage} of {totalPages}\n//         </span>\n//         <div>\n//           <button\n//             className=\"btn btn-outline-primary me-2\"\n//             onClick={handlePreviousPage}\n//             disabled={currentPage === 1}\n//           >\n//             Previous\n//           </button>\n//           {pageNumbers.map((page) => (\n//             <button\n//               key={page}\n//               className={`btn btn-outline-primary me-1 ${\n//                 currentPage === page ? \"active\" : \"\"\n//               }`}\n//               onClick={() => handlePagination(page)}\n//             >\n//               {page}\n//             </button>\n//           ))}\n//           <button\n//             className=\"btn btn-outline-primary ms-2\"\n//             onClick={handleNextPage}\n//             disabled={currentPage === totalPages}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default EmployeeTable;","map":{"version":3,"names":[],"sources":["E:/Last Time/Github/EmployeeManagementApp/frontend/src/Components/EmployeeTable.js"],"sourcesContent":["// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { DeleteEmployeeById } from \"../api\";\r\n// import { notify } from \"../utils\";\r\n\r\n// function EmployeeTable({\r\n//   employees = [], // Default value to handle undefined employees\r\n//   pagination = { currentPage: 1, totalPages: 1 },\r\n//   fetchEmployees,\r\n//   handleUpdateEmployee,\r\n// }) {\r\n//   const headers = [\"Name\", \"Email\", \"Phone\", \"Department\", \"Actions\"];\r\n//   const { currentPage, totalPages } = pagination;\r\n\r\n//   const handleNextPage = () => {\r\n//     if (currentPage < totalPages) {\r\n//       handlePagination(currentPage + 1);\r\n//     }\r\n//   };\r\n\r\n//   const handlePreviousPage = () => {\r\n//     if (currentPage > 1) {\r\n//       handlePagination(currentPage - 1);\r\n//     }\r\n//   };\r\n\r\n//   const handlePagination = (page) => {\r\n//     fetchEmployees(\"\", page, 5);\r\n//   };\r\n\r\n//   const handleDeleteEmployee = async (id) => {\r\n//     try {\r\n//       const { success, message } = await DeleteEmployeeById(id);\r\n//       if (success) {\r\n//         notify(message, \"success\");\r\n//         fetchEmployees();\r\n//       } else {\r\n//         notify(message, \"error\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       notify(\"Failed to delete Employee\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   const TableRow = ({ employee }) => (\r\n//     <tr>\r\n//       <td>\r\n//         <Link to={`/employee/${employee._id}`} className=\"text-decoration-none\">\r\n//           {employee.name}\r\n//         </Link>\r\n//       </td>\r\n//       <td>{employee.email}</td>\r\n//       <td>{employee.phone}</td>\r\n//       <td>{employee.department}</td>\r\n//       <td>\r\n//         <i\r\n//           className=\"bi bi-pencil-fill text-warning me-4\"\r\n//           role=\"button\"\r\n//           data-bs-toggle=\"tooltip\"\r\n//           data-bs-placement=\"top\"\r\n//           title=\"Edit\"\r\n//           onClick={() => handleUpdateEmployee(employee)}\r\n//         ></i>\r\n//         <i\r\n//           className=\"bi bi-trash-fill text-danger\"\r\n//           role=\"button\"\r\n//           data-bs-toggle=\"tooltip\"\r\n//           data-bs-placement=\"top\"\r\n//           title=\"Delete\"\r\n//           onClick={() => handleDeleteEmployee(employee._id)}\r\n//         ></i>\r\n//       </td>\r\n//     </tr>\r\n//   );\r\n\r\n//   const pageNumbers = Array.from(\r\n//     { length: totalPages },\r\n//     (_, index) => index + 1\r\n//   );\r\n\r\n//   return (\r\n//     <>\r\n//       <h1>Samadhan</h1>\r\n//       <table className=\"table table-striped\">\r\n//         <thead>\r\n//           <tr>\r\n//             {headers.map((header, i) => (\r\n//               <th key={i}>{header}</th>\r\n//             ))}\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {employees && employees.length === 0 ? (\r\n//             <tr>\r\n//               <td colSpan={headers.length}>Data Not Found</td>\r\n//             </tr>\r\n//           ) : (\r\n//             employees.map((emp) => <TableRow employee={emp} key={emp._id} />)\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       <div className=\"d-flex justify-content-between align-items-center my-3\">\r\n//         <span className=\"badge bg-primary\">\r\n//           Page {currentPage} of {totalPages}\r\n//         </span>\r\n//         <div>\r\n//           <button\r\n//             className=\"btn btn-outline-primary me-2\"\r\n//             onClick={handlePreviousPage}\r\n//             disabled={currentPage === 1}\r\n//           >\r\n//             Previous\r\n//           </button>\r\n//           {pageNumbers.map((page) => (\r\n//             <button\r\n//               key={page}\r\n//               className={`btn btn-outline-primary me-1 ${\r\n//                 currentPage === page ? \"active\" : \"\"\r\n//               }`}\r\n//               onClick={() => handlePagination(page)}\r\n//             >\r\n//               {page}\r\n//             </button>\r\n//           ))}\r\n//           <button\r\n//             className=\"btn btn-outline-primary ms-2\"\r\n//             onClick={handleNextPage}\r\n//             disabled={currentPage === totalPages}\r\n//           >\r\n//             Next\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default EmployeeTable;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}